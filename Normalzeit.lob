Function Normalzeit(dblIZeit as Single) as String
Rem Normalzeit.lob - Diese Funktion berechnet die Normalzeit im Format TT:SS:MM, ausgehend
Rem von der Industriezeit AZES
REM
REM Copyright (c) 2016 Pasqualino Imbemba p.imbemba@gmail.com
REM
REM This program is free software: you can redistribute it and/or modify
REM it under the terms of the GNU General Public License as published by
REM the Free Software Foundation, either version 3 of the License, or
REM (at your option) any later version.
REM 
REM This program is distributed in the hope that it will be useful,
REM but WITHOUT ANY WARRANTY; without even the implied warranty of
REM MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
REM GNU General Public License for more details.
REM
REM You should have received a copy of the GNU General Public License
REM along with this program.  If not, see <http://www.gnu.org/licenses/>.


	Dim intTage as Integer
	Dim intIMin as Integer Rem Industrieminuten
	Dim intNMin as Integer Rem Normale Minuten
	Dim strTage as String
	Dim strStunden as String
	Dim strMinuten as String
	Dim arrHun(1) as Variant
	Dim intHund as Integer
	Dim singArbeitszeit as Single
	
	singArbeitszeit = 7.60
	
	
	if dblIZeit > 0 then
		intTage = 0
		While dblIZeit >= singArbeitszeit
			dblIZeit = Round(dblIZeit, 2)
			intTage = intTage + 1
			dblIZeit = dblIZeit - singArbeitszeit
		Wend
		
		Rem Tage
		strTage = CStr(intTage)
		strTage = AddZeroFirst(strTage)
		Normalzeit = strTage & ":"
		
		if (dblIZeit > 0) then
		
			Rem Stunden
			arrHun = Split(dblIZeit,",")
			strStunden = CStr(arrHun(0))
			strStunden = AddZeroFirst(strStunden)
			Normalzeit = Normalzeit & strStunden & ":"
		
			Rem Minuten. Umrechnung siehe https://www.fin.be.ch/fin/de/index/personal/anstellungsbedingungen/arbeitszeit/sollarbeitszeit.assetref/dam/documents/FIN/PA/de/Minuten-Umrechnungstabelle%20d.pdf
			strMinuten = "00"
			
			if uBound(arrHun()) > 0 then
			Rem minuten vorhanden
				intIMin = Left(arrHun(1), 2)
				intNMin = (intIMin / 5) * 3
				strMinuten = CStr(intNMin)
				strMinuten = AddZeroFirst(strMinuten)
			
			End if
			
			Rem print uBound(arrHun())
	
			Normalzeit = Normalzeit & strMinuten
		Else
			Normalzeit = Normalzeit & "00:00"
		
		end if
	Else
		Normalzeit = "00:00:00"

	end if

End Function


Private Function AddZeroFirst (strString as String) as String
	if Len(strString) = 1 then
		AddZeroFirst = "0" & strString
	Else
		AddZeroFirst = strString
	end if
End Function

